{
  "$schema": "https://vyges.com/schema/v1/vyges-metadata.schema.json",
  "x-version": "1.0.0",
  "name": "vyges/sdcard-controller",
  "version": "1.0.0",
  "description": "High-performance SD Card controller with APB interface supporting SD/SDHC/SDXC cards with SPI and SD modes, DMA support, comprehensive error handling, security features, and debug capabilities.",
  "license": "Apache-2.0",
  "template": "vyges-ip-template@1.0.0",
  "target": [
    "asic",
    "fpga"
  ],
  "design_type": [
    "digital"
  ],
  "maturity": "prototype",
  "created": "2025-08-15T00:00:00Z",
  "updated": "2025-08-18T00:00:00Z",
  "source": {
    "type": "git",
    "url": "https://github.com/vyges/sd-card-controller-ip",
    "commit": "main",
    "private": false,
    "containsEncryptedPayload": false,
    "indexing": true
  },
  "maintainers": [
    {
      "name": "Vyges Development Team",
      "email": "team@vyges.com",
      "github": "vyges"
    }
  ],
  "branding": {
    "provider": "Vyges",
    "logo": "https://vyges.com/images/logo.svg",
    "website": "https://vyges.com/catalog/sdcard-controller",
    "usage": "Use of the logo is permitted for attribution or compatibility references only."
  },
  "interfaces": [
    {
      "type": "bus",
      "direction": "input",
      "protocol": "APB",
      "width": 32,
      "signals": [
        {
          "name": "PCLK_i",
          "direction": "input",
          "type": "clock",
          "width": 1,
          "description": "APB clock signal"
        },
        {
          "name": "PRESETn_i",
          "direction": "input",
          "type": "reset",
          "width": 1,
          "active_level": "low",
          "description": "APB reset signal"
        },
        {
          "name": "PSEL_i",
          "direction": "input",
          "type": "control",
          "width": 1,
          "description": "APB select signal"
        },
        {
          "name": "PENABLE_i",
          "direction": "input",
          "type": "control",
          "width": 1,
          "description": "APB enable signal"
        },
        {
          "name": "PWRITE_i",
          "direction": "input",
          "type": "control",
          "width": 1,
          "description": "APB write enable"
        },
        {
          "name": "PADDR_i",
          "direction": "input",
          "width": 16,
          "type": "data",
          "description": "APB address bus"
        },
        {
          "name": "PWDATA_i",
          "direction": "input",
          "width": 32,
          "type": "data",
          "description": "APB write data"
        },
        {
          "name": "PRDATA_o",
          "direction": "output",
          "width": 32,
          "type": "data",
          "description": "APB read data"
        },
        {
          "name": "PREADY_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "APB ready signal"
        },
        {
          "name": "PSLVERR_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "APB slave error signal"
        }
      ]
    },
    {
      "type": "sd_card",
      "direction": "bidirectional",
      "protocol": "SD",
      "signals": [
        {
          "name": "sd_clk_o",
          "direction": "output",
          "type": "clock",
          "width": 1,
          "description": "SD card clock"
        },
        {
          "name": "sd_cmd_io",
          "direction": "bidir",
          "type": "data",
          "width": 1,
          "description": "SD command line"
        },
        {
          "name": "sd_dat_io",
          "direction": "bidir",
          "width": 4,
          "type": "data",
          "description": "SD data lines"
        },
        {
          "name": "sd_cd_i",
          "direction": "input",
          "type": "status",
          "width": 1,
          "description": "Card detect"
        },
        {
          "name": "sd_wp_i",
          "direction": "input",
          "type": "status",
          "width": 1,
          "description": "Write protect"
        },
        {
          "name": "sd_pwr_en_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "SD card power enable"
        },
        {
          "name": "sd_vdd_sel_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "SD card voltage select"
        }
      ]
    },
    {
      "type": "interrupt",
      "direction": "output",
      "protocol": "Standard",
      "signals": [
        {
          "name": "sd_irq_o",
          "direction": "output",
          "type": "interrupt",
          "width": 1,
          "description": "SD card interrupt"
        },
        {
          "name": "dma_irq_o",
          "direction": "output",
          "type": "interrupt",
          "width": 1,
          "description": "DMA transfer complete interrupt"
        },
        {
          "name": "error_irq_o",
          "direction": "output",
          "type": "interrupt",
          "width": 1,
          "description": "Error condition interrupt"
        },
        {
          "name": "debug_irq_o",
          "direction": "output",
          "type": "interrupt",
          "width": 1,
          "description": "Debug event interrupt"
        }
      ]
    },
    {
      "type": "dma",
      "direction": "output",
      "optional": true,
      "protocol": "DMA",
      "signals": [
        {
          "name": "dma_req_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "DMA request"
        },
        {
          "name": "dma_ack_i",
          "direction": "input",
          "type": "control",
          "width": 1,
          "description": "DMA acknowledge"
        },
        {
          "name": "dma_addr_o",
          "direction": "output",
          "width": 32,
          "type": "data",
          "description": "DMA address"
        },
        {
          "name": "dma_len_o",
          "direction": "output",
          "width": 16,
          "type": "data",
          "description": "DMA length"
        },
        {
          "name": "dma_we_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "DMA write enable"
        },
        {
          "name": "dma_burst_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "DMA burst mode"
        },
        {
          "name": "dma_cache_o",
          "direction": "output",
          "type": "control",
          "width": 4,
          "description": "DMA cache attributes"
        }
      ]
    },
    {
      "type": "debug",
      "direction": "bidirectional",
      "protocol": "JTAG",
      "signals": [
        {
          "name": "jtag_tck_i",
          "direction": "input",
          "type": "clock",
          "width": 1,
          "description": "JTAG test clock"
        },
        {
          "name": "jtag_tms_i",
          "direction": "input",
          "type": "control",
          "width": 1,
          "description": "JTAG test mode select"
        },
        {
          "name": "jtag_tdi_i",
          "direction": "input",
          "type": "data",
          "width": 1,
          "description": "JTAG test data input"
        },
        {
          "name": "jtag_tdo_o",
          "direction": "output",
          "type": "data",
          "width": 1,
          "description": "JTAG test data output"
        },
        {
          "name": "jtag_trst_n_i",
          "direction": "input",
          "type": "reset",
          "width": 1,
          "description": "JTAG test reset"
        },
        {
          "name": "trace_data_o",
          "direction": "output",
          "type": "data",
          "width": 8,
          "description": "Trace data output"
        },
        {
          "name": "trace_valid_o",
          "direction": "output",
          "type": "control",
          "width": 1,
          "description": "Trace data valid"
        }
      ]
    }
  ],
  "parameters": [
    {
      "name": "SDCARD_APB_ADDR_WIDTH",
      "type": "int",
      "default": 16,
      "description": "Width of APB address bus",
      "range": {
        "min": 8,
        "max": 32
      },
      "units": "bits",
      "required": false
    },
    {
      "name": "SDCARD_DATA_WIDTH",
      "type": "int",
      "default": 4,
      "description": "SD card data width (1, 4, or 8 bits)",
      "range": {
        "min": 1,
        "max": 8
      },
      "units": "bits",
      "required": false
    },
    {
      "name": "SDCARD_FIFO_DEPTH",
      "type": "int",
      "default": 512,
      "description": "FIFO depth for data buffering",
      "range": {
        "min": 64,
        "max": 2048
      },
      "units": "bytes",
      "required": false
    },
    {
      "name": "SDCARD_DMA_ENABLE",
      "type": "bool",
      "default": true,
      "description": "Enable DMA support",
      "required": false
    },
    {
      "name": "SDCARD_SPI_MODE_ENABLE",
      "type": "bool",
      "default": true,
      "description": "Enable SPI mode support",
      "required": false
    }
  ],
  "categories": {
    "primary": "storage",
    "secondary": ["peripheral", "controller", "communication"],
    "tags": ["sdcard", "storage", "apb", "dma", "spi", "sdhc", "sdxc", "security", "debug"]
  },
  "community": {
    "issues": "https://github.com/vyges/sd-card-controller-ip/issues",
    "contributions": "https://github.com/vyges/sd-card-controller-ip/pulls",
    "chat": "https://github.com/vyges/sd-card-controller-ip/discussions"
  },
  "test": {
    "coverage": true,
    "testbenches": [
      "cocotb",
      "systemverilog"
    ],
    "simulators": [
      "verilator",
      "iverilog"
    ],
    "status": "in_progress",
    "coverage_targets": {
      "functional": 95,
      "code": 90,
      "protocol": 100
    }
  },
  "flows": {
    "verilator": {
      "status": "in_progress",
      "testbench": "tb/sv_tb/tb_sdcard_controller.sv"
    },
    "openlane": {
      "pdks": [
        "sky130B"
      ],
      "status": "planned",
      "clock_freq_mhz": 50,
      "area_um2": 50000
    },
    "vivado": {
      "status": "planned",
      "target_board": "arty-a7-35",
      "clock_freq_mhz": 100
    }
  },
  "asic": {
    "flavor": "digital",
    "pdks": [
      "sky130B"
    ],
    "synthesis_tool": "openlane",
    "clock_freq_mhz": 50,
    "constraints": [
      "constraints/asic/sdcard_controller.sdc"
    ],
    "tools": [
      "yosys",
      "openroad"
    ],
    "area_estimate": "0.05mm²"
  },
  "fpga": {
    "toolchain": "vivado",
    "board": "arty-a7-35",
    "cfu_playground_compatible": true,
    "constraints": [
      "constraints/fpga/sdcard_controller.xdc"
    ],
    "resource_usage": {
      "lut": 2000,
      "ff": 1500,
      "bram": 2
    }
  },
  "integration": {
    "examples": [
      {
        "target": "simulation",
        "wrapper": "integration/sdcard_controller_wrapper.v",
        "tb": "integration/sdcard_controller_tb.v",
        "description": "Basic simulation example"
      },
      {
        "target": "fpga",
        "wrapper": "integration/fpga_sdcard_controller_wrapper.v",
        "tb": "integration/fpga_sdcard_controller_tb.v",
        "description": "FPGA integration example"
      },
      {
        "target": "asic",
        "wrapper": "integration/asic_sdcard_controller_wrapper.v",
        "description": "ASIC integration example"
      }
    ]
  },
  "reliability": {
    "error_detection": [
      "crc",
      "timeout",
      "protocol",
      "power_fault",
      "tamper_detection"
    ],
    "error_correction": [
      "retry",
      "status_reporting",
      "automatic_recovery"
    ],
    "fault_tolerance": [
      "card_removal",
      "busy_handling",
      "power_management",
      "security_validation"
    ],
    "test_coverage": 95
  },
  "automation": {
    "automation_level": "enhanced",
    "minimal_required": [
      "name",
      "version",
      "license",
      "interfaces",
      "template",
      "target",
      "design_type",
      "maturity",
      "description",
      "source",
      "asic",
      "fpga",
      "test",
      "flows"
    ],
    "recommended_for_automation": [
      "parameters",
      "dependencies",
      "performance",
      "reliability",
      "integration"
    ],
    "blocking_issues": []
  },
  "meta": {
    "template": {
      "generator": "vyges-cli",
      "init_tool": "vyges-cli",
      "template_version": "1.0.0",
      "generated_at": "2025-08-18T00:00:00Z"
    },
    "generated_by": "vyges-cli",
    "schema": {
      "version": "1.0.0",
      "compatible_versions": [
        "1.0.0",
        "1.1.0"
      ],
      "generated_with": "vyges-cli"
    }
  }
}